"""
This type stub file was generated by pyright.
"""

from typing import List, Tuple, Union

class _lazyclassproperty:
    def __init__(self, fn) -> None:
        ...
    
    def __get__(self, obj, cls): # -> Any:
        ...
    


UnicodeRangeList = List[Union[Tuple[int, int], Tuple[int]]]
class unicode_set:
    """
    A set of Unicode characters, for language-specific strings for
    ``alphas``, ``nums``, ``alphanums``, and ``printables``.
    A unicode_set is defined by a list of ranges in the Unicode character
    set, in a class attribute ``_ranges``. Ranges can be specified using
    2-tuples or a 1-tuple, such as::

        _ranges = [
            (0x0020, 0x007e),
            (0x00a0, 0x00ff),
            (0x0100,),
            ]

    Ranges are left- and right-inclusive. A 1-tuple of (x,) is treated as (x, x).

    A unicode set can also be defined using multiple inheritance of other unicode sets::

        class CJK(Chinese, Japanese, Korean):
            pass
    """
    _ranges: UnicodeRangeList = ...
    @_lazyclassproperty
    def printables(cls): # -> LiteralString:
        """all non-whitespace characters in this range"""
        ...
    
    @_lazyclassproperty
    def alphas(cls): # -> LiteralString:
        """all alphabetic characters in this range"""
        ...
    
    @_lazyclassproperty
    def nums(cls): # -> LiteralString:
        """all numeric digit characters in this range"""
        ...
    
    @_lazyclassproperty
    def alphanums(cls): # -> Any:
        """all alphanumeric characters in this range"""
        ...
    
    @_lazyclassproperty
    def identchars(cls): # -> str:
        """all characters in this range that are valid identifier characters, plus underscore '_'"""
        ...
    
    @_lazyclassproperty
    def identbodychars(cls): # -> LiteralString:
        """
        all characters in this range that are valid identifier body characters,
        plus the digits 0-9, and · (Unicode MIDDLE DOT)
        """
        ...
    
    @_lazyclassproperty
    def identifier(cls): # -> Word:
        """
        a pyparsing Word expression for an identifier using this range's definitions for
        identchars and identbodychars
        """
        ...
    


class pyparsing_unicode(unicode_set):
    """
    A namespace class for defining common language unicode_sets.
    """
    _ranges: UnicodeRangeList = ...
    class BasicMultilingualPlane(unicode_set):
        """Unicode set for the Basic Multilingual Plane"""
        _ranges: UnicodeRangeList = ...
    
    
    class Latin1(unicode_set):
        """Unicode set for Latin-1 Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class LatinA(unicode_set):
        """Unicode set for Latin-A Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class LatinB(unicode_set):
        """Unicode set for Latin-B Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Greek(unicode_set):
        """Unicode set for Greek Unicode Character Ranges"""
        _ranges: UnicodeRangeList = ...
    
    
    class Cyrillic(unicode_set):
        """Unicode set for Cyrillic Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Chinese(unicode_set):
        """Unicode set for Chinese Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Japanese(unicode_set):
        """Unicode set for Japanese Unicode Character Range, combining Kanji, Hiragana, and Katakana ranges"""
        class Kanji(unicode_set):
            "Unicode set for Kanji Unicode Character Range"
            _ranges: UnicodeRangeList = ...
        
        
        class Hiragana(unicode_set):
            """Unicode set for Hiragana Unicode Character Range"""
            _ranges: UnicodeRangeList = ...
        
        
        class Katakana(unicode_set):
            """Unicode set for Katakana  Unicode Character Range"""
            _ranges: UnicodeRangeList = ...
        
        
        漢字 = Kanji
        カタカナ = Katakana
        ひらがな = Hiragana
        _ranges = ...
    
    
    class Hangul(unicode_set):
        """Unicode set for Hangul (Korean) Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    Korean = Hangul
    class CJK(Chinese, Japanese, Hangul):
        """Unicode set for combined Chinese, Japanese, and Korean (CJK) Unicode Character Range"""
        ...
    
    
    class Thai(unicode_set):
        """Unicode set for Thai Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Arabic(unicode_set):
        """Unicode set for Arabic Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Hebrew(unicode_set):
        """Unicode set for Hebrew Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    class Devanagari(unicode_set):
        """Unicode set for Devanagari Unicode Character Range"""
        _ranges: UnicodeRangeList = ...
    
    
    BMP = BasicMultilingualPlane
    العربية = Arabic
    中文 = Chinese
    кириллица = Cyrillic
    Ελληνικά = Greek
    עִברִית = Hebrew
    日本語 = Japanese
    한국어 = Korean
    ไทย = Thai
    देवनागरी = Devanagari


